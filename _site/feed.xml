<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-07-31T15:42:54+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">sibervepunk</title><subtitle>sibervepunk is a computer engineer trying to add some kind of value to community
</subtitle><author><name>sibervepunk</name></author><entry xml:lang="tr"><title type="html">dijital tüketim mesleki ilerleyişimi yavaşlatıyor</title><link href="http://localhost:4000/dijital-t%C3%BCketim-%C3%BCzerine.html" rel="alternate" type="text/html" title="dijital tüketim mesleki ilerleyişimi yavaşlatıyor" /><published>2024-07-31T00:00:00+03:00</published><updated>2024-07-31T00:00:00+03:00</updated><id>http://localhost:4000/dijital-t%C3%BCketim-%C3%BCzerine</id><content type="html" xml:base="http://localhost:4000/dijital-t%C3%BCketim-%C3%BCzerine.html">&lt;blockquote&gt;
  &lt;p&gt;know thyself&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;İsteyerek ya da istemeyerek, belki büyük güçler belki de büyük olmak isteyen birçok küçük güç tarafından, dünyanın neredeyse tamamına dayatılan ve bütün sıradan insanları bir şekilde etkileyen yeni bir yaşam tarzı var: tüketim odaklı yaşam. Hızlı tüketmek, sürekli tüketmek, daha çok tüketmek.&lt;/p&gt;

&lt;p&gt;Bu tüketim çılgınlığının alışveriş odaklı tarafına yapacak çok yorumum yok çünkü bu zaten çok uzun yıllardır var olan, &lt;em&gt;-izm&lt;/em&gt;  ile biten birtakım hareketlerle doğmuş ve &lt;em&gt;-oji&lt;/em&gt; ile biten birtakım çalışmalarla çok kez araştırılmış, dile getirilmiş bir konu. Kamu spotlarından romantik komedilere, oradan kişisel gelişim kitaplarına konu oldu ve halk bir şekilde sürekli bilinçlendirilmeye çalışılıyor yıllardır. The Minimalists denilen iki eleman ve Marie Kondo gibi  &lt;em&gt;“akıllı”&lt;/em&gt;  insanlar çok para kazandı bu hikayede.  Kendi adıma bilinçli bir tüketici olduğuma inanıyorum ve alışveriş çılgınlığı beni çok etkilemiyor, konunun yine çok konuşulan diğer tarafına bakacağım.&lt;/p&gt;

&lt;p&gt;Bahsedeceğim tüketim, dijital içerik, bilgi ve duygu düşünce tüketimi. Bütün bu tüketimlerin kesiştiği, bağlantılarının arka planına inildiği sosyal bilimler çalışmalarının olduğunu biliyorum fakat sıradan bir insan olarak kendi hayatımdaki, özellikle mesleki gelişimimdeki etkilerden bahsetmek istiyorum.&lt;/p&gt;

&lt;p&gt;Uzun zamandır aklımda olsa da bu çalışmalara dayanan ciddi bir kitap okuyamadım (&lt;em&gt;sebebi de bu konuya dayanan kısır bir döngü)&lt;/em&gt; fakat bol bol içerik tükettim.. Çeşitli TED talklar, sıcakkanlı bir arkaplanla yeni açtığı kanalında çaktırmadan kişisel gelişim pazarlayan birkaç indie youtuber videosu izledim ve tabii tweetler okudum..  Bir de kendimi gözlemleme imkanım bol bol oldu.&lt;/p&gt;

&lt;p&gt;Hızlı tüketimin beyne de, zihne de, ruha da zararlı olduğuna ikna oldum.&lt;/p&gt;

&lt;p&gt;Bu konunun üzerine en çok gitme sebebimse, kişisel hayattaki tüm yan etkilerinin yanısıra,  Jules Payot’un deyimiyle “zihin işçisi” olan biri olarak mesleğimde daha iyi olmamı da engelliyor olması.&lt;/p&gt;

&lt;p&gt;Yazılım, mühendislik gibi disiplinlerde kendini sürekli geliştirme ve sürekli öğrenme halinde olmak kaçınılmaz bir süreç. Ek bir efor sarf etmeyip sadece işinizi yapmaya çalışırken bile yeni bir konsepti ya da teknolojiyi öğrenmek zorundasınız. Ekstra eforu sarf ederseniz de işini daha iyi yapan birisi olursunuz. Lisanstan mezun olduğumdan beri &lt;em&gt;(ki bu yazıyı yazarken tam 1 yıl oluyor)&lt;/em&gt; ekstra eforu sarf etmek birinci önceliğim oldu. Daha çok çalışmak, daha çok okumak, daha çok bilmek. Teknik çalışmaların yanı sıra “software crafting” denilen soft becerilerle ilgili de okumalar yaptım ve tavsiyeler aldım. Sanırım ilk hatalarımdan biri herkesten her türlü tavsiyeyi almaktı. Direkt uygulamaya geçmesem bile bu tavsiyeler aklımın bir ucunda yer ediniyor ve “ya öylesi daha iyiyse” diye düşünmekten herhangi birini hayata geçirmekten beni alıkoyuyordu.&lt;/p&gt;

&lt;p&gt;Online tavsiyelerle ilgili problem şu, karşıdaki kişi yazdığı blog yazısını tamamen kendi bakış açısı ve hayat tarzı ile yazıyor. Size dair hiçbir fikri yok, sizin de ona dair hiçbir fikriniz yok. Onun için işe yarayan şeylerin sizin için işe yarayacağının garantisi yok. Üstelik nedensellik adına hiçbir sorgulama yapmanıza fırsat olmuyor, tavsiyeyi okuyor, tüketiyor ve geçiyorsunuz. Aklınızın bir köşesinde, yapılacaklar listenizde yer kaplıyor fakat sizin bu konuyu içselleştirme, süzme fırsatınız olmuyor. Böyle yapmanız gerektiğinin bile farkında olmuyorsunuz aslında.&lt;/p&gt;

&lt;p&gt;İşte böyle farkında olmadan aldığım tavsiyelerden biri de bahsettiğim çalışmaları sistematik hale getirmek, düzenli çalışmak ve türevi şeklinde oldu. Bunu yapmam gerektiği kafama kazındıktan sonra işler benim için karmaşık bir hal almaya başladı. Full time çalışırken bir yandan kişisel hayatımı dengelemem, bir yandan da plana sadık kalmam gerekiyordu.&lt;/p&gt;

&lt;p&gt;Her ne kadar iradeniz plana sadık kalsa da sağlığınız, hayatınızdaki gelişmeler, daha fazla bilgiyi kabul edemeyecek olan beyniniz her zaman plana kalmıyor. Böyle olunca da bahsettiğim sistemi oturtmak zorlaşıyor, daha farklı tavsiye arayışına giriyorsunuz, daha çok blog okuyorsunuz. Kendinizi verimlilik arayışı içinde, arayıştan dolayı verimli gibi hissettiren fakat gerçek anlamda verimli bir iş yapmadığınız günler geçirirken buluyorsunuz.&lt;/p&gt;

&lt;p&gt;Tavsiyelerin bir de yaratıcılığı ve çözüm üretmeyi engelleme özelliği var. Bir problem yaşadığımda ilk iş çözümü araştırmak oluyor. Hem teknik hem de diğer meselelerde bu böyle. Sonuç olarak problemim üzerine yeterince düşünme şansı vermemiş, çözüm üretmek bir yana problemi tam olarak anlayamamış oluyorum.&lt;/p&gt;

&lt;p&gt;Ne yapmam gerektiğini, nasıl yapmam gerektiğini çok farklı kişilerden defalarca kez ‘tükettim’. Bu bilgilerle somut bir çıktı üretmeye enerjim ve kaynağım kalmamış oldu.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Mesleğim gereği farklı alanlardan farklı konseptleri öğrenmeyi seviyorum. Özellikle high-level araçların arkasındaki low-level altyapıları ve sistemleri merak ediyorum ve bunları biliyor olmanın işini iyi yapma konusundaki katkısının da farkındayım. Fakat hayatımda sosyal medyadan empoze edilmiş sürekli bir telaş, bir acele söz konusu olduğundan, bu kaynaklara yeterli vakti ayıramıyorum. Çünkü bilgiyi görmeye, hızlıca almaya ve başka bir konuya geçmeye çok alıştım. Çünkü sürekli tükettiğim kısa içerikler gerek yazılı gerek görsel olsun, beni böyle alıştırdı. Teknik derinlikli bir kitabı okurken aynı sayfayı tekrar okumak zaman kaybı gibi hissettiriyor, tek seferde anlayamayıp üzerinden geçmek zorunda olduğum her bilgi, kaydırıp geçemediğim için beni yetersiz ve geç kalmış hissettiriyor.&lt;/p&gt;

&lt;p&gt;Hepsini, bir an önce, hızlıca bilmek istiyorum. Bu insan olarak mümkün olmadığından, kendimi yine hiçbirini yapmamış olarak buluyorum.
Uzun vadeli düşünemiyorum, bir kitabı 6 ay boyunca projelerini yaparak çalışmanın benim için büyük bir vakit kaybı olduğunu düşünmekten kendimi alıkoyamıyor, zaten geç kalmış hissettiğim için de kendimi döngüde buluyorum.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Sadece tüketme odaklı olunca doğal olarak üretme becerim azalıyor. Üretme becerisine konuşmayı, kendini ifade edebilmeyi, kelimelerle aranın iyi olmasını da dahil ediyorum bu bağlamda. Yıllardır kendimi kelimelerle arası çok iyi olan biri olarak bildikten sonra konuşurken doğru kelimeyi seçememek, hatta yazı yazarken vermek istediğim mesajı, bilgiyi daha anlaşılır ve sade bir şekilde veremiyor olduğumu görmek doğal olarak beni rahatsız ediyor. Her ne kadar yazılım asosyal bir iş, insanlarla uğraşmıyorsun denilse de, insanlarla yazılı ya da sözlü olarak sürekli iletişimde kalman gereken ve yaptıklarını, yapacaklarını iyi ifade etmen gereken bir iş. Bu becerimi de üretmek yerine tüketerek kaybetmeye yaklaşmış durumdayım.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Bütün bunlar ilerleyişi alt üst edip kafamı karıştırırken, bir de hızlı tüketimin fiziksel ve zihinsel yan etkileriyle baş etmek zorunda kalıyorum. Dikkati toplayamama, odaklanamama, okuduğunu anlayamama, stres, anksiyete. Bu tür şikayetleri çok fazla kişiden görüyorum son zamanlarda, bana kalırsa en büyük ortak noktamız, dijital içerik tüketimi.&lt;/p&gt;

&lt;p&gt;Zamanın göreceliliği de doom scrolling yaparken iliklerime kadar hissettiğim bir gerçek. Kaybolan vakit bir yana, bunu fark edip telefonu koyduktan sonra sersemlemiş kafamın kendine gelmeye çalışması bir yana. Yapacak bir şey bulamayıp, kendine gelemeyip yine telefona uzanmak da başka bir yana.&lt;/p&gt;

&lt;p&gt;Beynin mutlu eden, mutlu etmese bile mutsuzluk veren şeyden kaçma fırsatı sunan, hızlı, kolay erişilebilir bir yol olan sosyal medya içeriklerine olan yaklaşımı konusundaki yazıları herkes görmüştür zaten.&lt;/p&gt;

&lt;p&gt;Dile getirdiğinde hatta yazıya döktüğünde insanı çok rahatsız ediyor bunlar, fakat kendini bilmek bence kendini değiştirmeden önce yapılacak en önemli şey. Neyi yanlış yaptığımı biliyorum, artık dokümente edilmiş halde önümde. Neyin üzerinde çalışmam gerektiğini de biliyor oldum doğrudan.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Zararları konuşuyoruz ama internetin sunduğu fırsatlar karşısında her zaman büyülenen biri olmuşumdur. Dünyanın herhangi bir yerinden biriyle saniyeler içinde iletişime geçebilmek ve sohbet edebilmek paha biçilmez bir nimet. Sadece doğru kişilerin içeriklerini görebilmek ve onlara ulaşabilmek için filtreleme yapmaya biraz çaba göstermek gerekiyor. Yoksa tamamen eli eteği çekmenin olduğum sektörde ve bulunduğum çağda çok faydası olacağını sanmıyorum.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Sorunlarla dolu bu yazıyı, bahsettiklerimin aksine davranıp tavsiyelerle ya da planlarla bitirmeyeceğim. Başta yazdığım “kendini bil” alıntısı bu yüzdendi. Sadece sorunu görmeye ve somut hale getirmeye çalıştım. Ne yapabilirim diye araştırmayı bir süre bırakacağım. Önce zihnimi kalabalıktan arındırmayı, farkında olmadan edindiğim bu hızlı ve aşırı tüketim alışkanlığını bırakmayı sonra yavaş yavaş sindirerek tüketmek nasıl olur öğrenmeyi planlıyorum. Tüm bunların nasıl yapılacağını kendim keşfetmeye yetecek kadar ham bilgiye sahibim, artık işlemeye fırsat verceğim.&lt;/p&gt;</content><author><name>sibervepunk</name></author><summary type="html">know thyself</summary></entry><entry xml:lang="en"><title type="html">digital consumption keeps me from getting better at my job</title><link href="http://localhost:4000/digital-consumption.html" rel="alternate" type="text/html" title="digital consumption keeps me from getting better at my job" /><published>2024-07-31T00:00:00+03:00</published><updated>2024-07-31T00:00:00+03:00</updated><id>http://localhost:4000/digital-consumption</id><content type="html" xml:base="http://localhost:4000/digital-consumption.html">&lt;blockquote&gt;
  &lt;p&gt;know thyself&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is a new lifestyle imposed on almost the entire world, willingly or unwillingly, perhaps by powerful people or by many small people that want to be powerful, which somehow affects all ordinary people: a consumption-oriented life. Fast consumption, constant consumption, more consumption.&lt;/p&gt;

&lt;p&gt;I don’t have much to say about the “shopping” side of this consumption craze because it’s a topic that’s been around for many years, born out of  &lt;em&gt;-ism&lt;/em&gt; movements and studied numerous times through  &lt;em&gt;-ology&lt;/em&gt; disciplines. It has been the subject of public service announcements, romantic comedies, and personal development books. The public has been constantly educated about it for years. Two guys known as The Minimalists and some “smart” people like Marie Kondo made a fortune out of this movement. Personally, I believe I am a conscious consumer, and the shopping craze doesn’t affect me much, so I want to look at the other, often-discussed side of the issue.&lt;/p&gt;

&lt;p&gt;The consumption I will discuss is digital content, information, and emotion/thought consumption. I know there are social science studies that delve into the intersections and background connections of all these consumptions, but as an ordinary person, I want to talk about the effects on my own life, particularly my professional development.&lt;/p&gt;

&lt;p&gt;Although it has been on my mind for a long time, I haven’t been able to read a comprehensive book based on these studies (&lt;em&gt;the reason being the vicious cycle based on this topic&lt;/em&gt;), but I have consumed plenty of content… I’ve watched various TED talks, several indie YouTuber videos with a wholesome background, selling personal development under the hood on their newly launched channels, and of course, read tweets… I’ve also had plenty of opportunities to observe myself.&lt;/p&gt;

&lt;p&gt;At this point I am convinced that fast consumption is harmful to the brain, mind, and soul.&lt;/p&gt;

&lt;p&gt;The main reason I pursue this topic is that, aside from all the side effects in personal life, it also prevents me from being better at my profession as a brain-worker as Jules Payot puts it.&lt;/p&gt;

&lt;p&gt;In disciplines like software engineering, constantly improving oneself and being in a state of continuous learning is an inevitable process. Even if you don’t put in extra effort and just try to do your job, you have to learn a new concept or technology. If you do put in the extra effort, you become someone who does their job better. Since graduating from undergraduate studies &lt;em&gt;(which marks exactly one year as I write this post)&lt;/em&gt;, putting in extra effort has been my top priority. Working more, reading more, knowing more. In addition to technical studies, I also read about and received advice on soft skills related to “software crafting.” One of my first mistakes, I think, was taking every kind of advice from everyone. Even if I didn’t implement them directly, these pieces of advice took up space in my mind, and thinking “what if that’s better” prevented me from putting any of them into practice.&lt;/p&gt;

&lt;p&gt;The problem with online advice is that the person writing the blog post is doing so entirely from their own perspective and lifestyle. They have no idea about you, and you have no idea about them. There’s no guarantee that what works for them will work for you. Moreover, you don’t get a chance to question causality, you just read the advice, consume it, and move on. It takes up space in your mind and on your to-do list, but you don’t get a chance to internalize or filter this topic. You don’t even realize that you should actually do so.&lt;/p&gt;

&lt;p&gt;One of the pieces of advice I took without realizing it was to systematize the mentioned studies, work regularly, and similar. Once that idea put in my mind, things became complicated for me. While working full-time, I had to balance my personal life and stick to the plan.&lt;/p&gt;

&lt;p&gt;No matter how much your willpower sticks to the plan, your health, developments in your life, and your brain, which sometimes refuses to accept more information, don’t always stick to the plan. When this happens, it becomes difficult to establish the system I mentioned, and you start looking for more advice, reading more blogs. &lt;strong&gt;You find yourself in a quest for productivity, feeling productive because of the quest, but not really doing any productive work.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Advice also has the effect of reducing creativity and problem-solving skills. When I have a problem, technical or other, the first thing I do is research the solution. As a result, I don’t get enough chance to think about my problem, let alone produce a solution, and I don’t fully understand the problem.&lt;/p&gt;

&lt;p&gt;I’ve “consumed” what I should do and how I should do it many times from different people. With all this information occupying my brain, I no longer had the energy and resources to produce a tangible output.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Because of my profession, I like learning different concepts from different fields. I am particularly curious about the low-level infrastructures and systems behind high-level tools, and I am aware of the contribution of knowing these to doing my job well. However, because of the constant rush and haste imposed by social media in my life, I can’t devote enough time to these resources. Because I am so used to seeing information, quickly taking it in, and moving on to another topic. Because the short content I constantly consume, whether written or visual, has made me accustomed to this. &lt;br /&gt;
While reading a technically deep book, re-reading the same page feels like a waste of time; every piece of information I have to go over because I couldn’t understand it at once makes me feel inadequate and late because I can’t just scroll past it.&lt;/p&gt;

&lt;p&gt;I want to know everything, immediately, quickly. Since this is not humanly possible, I end up doing nothing.&lt;/p&gt;

&lt;p&gt;I can’t think long-term; I can’t stop myself from thinking that working on a book for 6 months, doing its projects, is a huge waste of time for me, and because I already feel late, I find myself, yet again, in a cycle.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;When I’m focused solely on consuming, my ability to produce naturally decreases. I include speaking, being able to express oneself, and having a good command of words in this context. After knowing myself as someone who has always been good with words for years, seeing that I can’t choose the right word when speaking, or that I can’t convey the message or information I want to give more clearly and simply when writing, naturally bothers me. Although it is said that software development is an antisocial job, you constantly need to communicate with people, either in writing or verbally, and you need to express what you have done and what you will do well. I am approaching the point of losing this skill by consuming instead of producing.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;While all this disrupts progress and confuses my mind, I also have to deal with the physical and mental side effects of fast consumption. Difficulty concentrating, lack of focus, inability to understand what I read, stress, anxiety. I see these kinds of complaints from many people lately, and in my opinion, our biggest common ground is digital content consumption.&lt;/p&gt;

&lt;p&gt;The relativity of time is a reality I feel to the core while doom scrolling. Besides the lost time, there’s the confusion after realizing it and putting the phone down, trying to get my dazed mind back to normal. And then, not finding anything to do, not being able to putting yourself together, and reaching for the phone again.&lt;/p&gt;

&lt;p&gt;Everyone has seen the articles about the brain’s approach to social media content, which offers a quick, easily accessible way that makes you happy or, even if it doesn’t make you happy, offers an escape from the thing that makes you unhappy.&lt;/p&gt;

&lt;p&gt;When you put these into words or write them down, it bothers you a lot, but I think knowing yourself is the most important thing to do before changing yourself. I know what I’m doing wrong, and now it’s documented in front of me. I also know what I need to work on.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We are talking about the harms, but I have always been fascinated by the opportunities the internet offers. Being able to communicate and chat with someone from anywhere in the world within seconds is an invaluable blessing. It just takes a little effort to filter to see and reach the right people’s content. Otherwise, I don’t think completely withdrawing would be very beneficial in my industry and the era I live in.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I won’t go against what I mentioned so I won’t end this problem-filled post with advice or plans. That’s why I started with the quote “know thyself.” I just tried to see and make the problem tangible. I will stop researching what I can do for a while. First, I plan to clear my mind of clutter, quit this fast and excessive consumption habit I have acquired without realizing it, and then learn how to consume slowly and gradually. I have enough raw information to discover how to do all this myself; I will now give myself the opportunity to process it.&lt;/p&gt;</content><author><name>sibervepunk</name></author><summary type="html">know thyself</summary></entry><entry xml:lang="tr"><title type="html">Programlamada Yardım Almak</title><link href="http://localhost:4000/programlamada-yard%C4%B1m-almak.html" rel="alternate" type="text/html" title="Programlamada Yardım Almak" /><published>2023-08-09T00:00:00+03:00</published><updated>2023-08-09T00:00:00+03:00</updated><id>http://localhost:4000/programlamada-yard%C4%B1m-almak</id><content type="html" xml:base="http://localhost:4000/programlamada-yard%C4%B1m-almak.html">&lt;p&gt;Kod yazarken yardıma ihtiyacı olmayan yok, bu İngilizce, Türkçe her blogta, forumda, videoda bahsedilen bir gerçek. Yeni başlayan ya da uzman herkesin bir noktada birine ya da bir şeye danışması gerekiyor.&lt;/p&gt;

&lt;p&gt;Hem yardım alan hem de yardımcı olan tarafta sık sık bulunan biri olarak, bu sürecin iki taraf için de kolaylaşmasını ve hızlanmasını sağlayacak olan bazı tecrüblerim var.&lt;/p&gt;

&lt;h3 id=&quot;hatanın-anlaşılması-ve-analiz-edilmesi&quot;&gt;Hatanın anlaşılması ve analiz edilmesi&lt;/h3&gt;

&lt;p&gt;İkinci bir kişiye başvurmadan önce yapabileceğimiz çok fazla şey var ve bunlar herkesten önce bize zaman kazandıran adımlar. En önemlisi karşılaştığımız hatanın aslında ne olduğunu bilmeliyiz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hata ayıklama (debugging)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hata ayıklama, programlamanın bir parçası. Hatta bir parçası bile değil ya direkt kendisi diyeceğim. Hataya sebep olan kodu da programlayan kişi yazdı sonuçta. En kolay düzeltebilecek kişi de o.&lt;/p&gt;

&lt;p&gt;Bu adım hatanın çözülebileceği en kolay adım aslında. Özellikle yeni programlama öğrenenler doğru debuglamayı da öğrenirlerse hataların %90’ından stackoverflow’a gitmezler bile. IDE’lerin özel debug araçları var ve bunlar kullanışlı ama ondan önce çok basit print, log ifadelerini doğru yerlere koymak ve çıktılarını görmek baş ağrılarını baştan önleyebilir. &lt;em&gt;“Loop çalışmıyor”&lt;/em&gt; geçerli bir hata tarifi değildir. Loop başına, sonuna, işlemin yapıldığı noktalara birer log atarız. Bunun sonucunda hatayı, &lt;em&gt;“loopa girmiyor, looptan çıkmıyor ya da loopta işlem yapılmıyor”&lt;/em&gt; diye küçültebiliriz. Uğraşacağımız kısım çok daha dar bir alan oldu artık.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kod tekrarları&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Aynı kodu başka bir yerde yazdınız, oradaki çalışıyor ama bu çalışmıyor. Demek ki burada bir problem var. Orayla burası arasında ne fark var? Aynı dosyalar mı import ediliyor, aynı değişkenler tanımlanmış mı, aynı noktaya varıyorlar mı? Orada çalışan kodun burada çalışmamasının tek sebebi farklı bir şeylerin olmasıdır. O farkı bulmalı ve hatayla ilişkilendirmeliyiz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hata mesajları&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;IDE veya editorler eğer bariz bir hata yapıldıysa mutlaka hata mesajı veriyor. Onları boşuna vermiyor. Bazen &lt;em&gt;“missing }”&lt;/em&gt; hatası yardım platformlarında  soruluyor. Bilgisayar aslında açık ve net bir şekilde x. satıra bir tane “ } “ koy diyor. Yani nereye ne koyacağına kadar söylüyor bunlara dikkat edebiliriz.&lt;/p&gt;

&lt;p&gt;Hata mesajlarını anlamak bazen çok kolay olmuyor. Özellikle geliştirme platformu Türkçe ise benim kafamı çok karıştırıyor, sebebi de teknik terimlerin çevrilmesi. &lt;em&gt;Uç arabirim beklenmedik şekilde sonlandırıldı&lt;/em&gt; cümlesi beynimde okuduğum anda bir anlam ifade etmiyor. Bu tür yardımcı araçları anlamak için ekstra efor sarfetmemize gerek olmamalı diye düşünüyorum.&lt;/p&gt;

&lt;h3 id=&quot;araştırma-adımı&quot;&gt;Araştırma adımı&lt;/h3&gt;

&lt;p&gt;Programcının en EN büyük becerisi arama motoru kullanabilme becerisidir. Benim 4 yıllık öğrenciliğim boyunca internette aratıp da bulamadığım birkaç tane problem olmuştur. Bunların belki bir iki tanesi gerçekten spesifik sorular olduğu için bulunmamıştır, diğerlerinde eminim ki ben doğru anahtar kelimelerle araştırmamışımdır. Eğer  &lt;strong&gt;&lt;em&gt;gerçekten&lt;/em&gt;&lt;/strong&gt; internette çözümü olmayan bir şey bulduysanız &lt;strong&gt;&lt;em&gt;gerçekten iyi bir şeyler&lt;/em&gt;&lt;/strong&gt; bulmuş olabilirsiniz. &lt;span class=&quot;emoji&quot;&gt;😶‍🌫️&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anafikre odaklanmak&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Diyelim ki basit bir “todo list” mobil uygulaması yapıyoruz. Görevleri bir liste yapısında tutuyoruz. Listelere ögeleri ekleyecek kodu yazdık ama kaldırmayı yapamadık. İnternette araştırdığımız cümle &lt;em&gt;“yapılacaklar listesinden öge kaldırma”&lt;/em&gt; olursa herhalde üretkenlik içerikleri falan çıkar. &lt;em&gt;“x programlama dilinde yapılacaklar listesinden öge kaldırma”&lt;/em&gt; dersek evet biraz daha amaca uygun ama yine de başkalarının implementasyonlarına dayalı, dinamiği bizim programımıza uymayacak çözümler buluyoruz.&lt;/p&gt;

&lt;p&gt;Bizim ihtiyacımız &lt;em&gt;“listeden öge silmek, x dili”&lt;/em&gt; şeklinde bir arama. Anafikir yapılacaklar listesi değil, anafikir liste yapısı.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;İngilizce konusunda çok tutucuyum, her lafımda geçer bu muhtemelen. Araştırmaları da İngilizce yapmak nokta atışı çözümlere ulaştıracaktır. Bana güvenin ve tüm ortamlarınızı İngilizce’ye geçirin.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;ChatGPT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yapay zeka destekli yardımcıların kullanılmasına ben karşı değilim. Yeni başlayanların her sıkıştığında oraya gitmesinin ya da direkt kodu istemesinin tabii ki sakıncalı olduğunu düşünüyorum. Herkes kendi bilgi ve yetkinliği doğrultusunda yapay zeka dozunu ayarlayabilir. Yine de oraya başvurmadan önce gerçek insanların yazılı ya da sözlü fikir alışverişi yapması birçok açıdan bana daha doğru ve daha faydalı geliyor.&lt;/p&gt;

&lt;h3 id=&quot;yardım-isteme-adımı&quot;&gt;Yardım isteme adımı&lt;/h3&gt;

&lt;p&gt;Hata analiz edildi, ne olduğu az çok anlaşıldı. Hata mesajı yok ya da çözüm sunmadı, problem internette de aranamayacak kadar spesifik ya da karmaşık. Sonuçta sadece programlama hataları konusunda değil algoritma ve mantık konusunda da yardıma ihtiyacımız oluyor. Tam olarak ihtiyacımızı belirtmek zorunda kalabiliriz.&lt;/p&gt;

&lt;p&gt;Bu adımlar belirli bir kişiye soru sorarken iki taraf için de kullanışlı olacak ama daha da güzeli, toplu bir platforma sorarken cevap alma olasılığını kat kat arttıracak. Çünkü yardımcı olacak kişi hatayı anlamak için ekstra efor harcamayacak, çözüm odaklı yaklaşabilecek.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Girebildiğin kadar detaya gir&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“xx yaparken kod hata veriyor”&lt;/em&gt; cümlesi eksik. Gereksiz yere süreci uzatacak derecede eksik. Ne hatası veriyor? Çalışmıyor mu, çalışıp duruyor mu, hiç tepki vermiyor mu, kapanıyor mu, hata fırlatıyor mu? Problem açık ve net tarif edilmeli. Yine (o bağlamda mümkünse) anafikre odaklanarak sorulmalı.&lt;/p&gt;

&lt;p&gt;Probleme dair mümkün olduğunca çok detay verilmeli. Hangi işletim sistemi, hangi platform, hangi dil, hangi framework, hangi modüller her şey önemli.&lt;/p&gt;

&lt;p&gt;Hata mesajlarını varsa paylaşılmalı. Siz anlamamış olabilirsiniz ama başkası anlayabilir. İşe yaramıyor diye düşünmemek lazım.&lt;/p&gt;

&lt;p&gt;Kodların ekran görüntüsünü ya da daha da kötüsü fotoğrafını atmak yerine direkt yazılı olarak kod paylaşılmalı. Hem okuması hem de gerekirse kopyalayıp denemesi kolay oluyor.&lt;/p&gt;

&lt;p&gt;Eğer analiz etme kısmında problemi doğru bir şekilde daralttığınızdan eminseniz sadece hatalı olan kısmın kodunu paylaşın. Değilseniz ve tüm kodu paylaşıyorsanız da hatanın nerede olabileceğini belirtin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fikir isterken&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Yapılacaklar listesi programı nasıl yapılıır?” sorusu da eksik. Kimse oturup sıfırdan bunu anlatmaz, anlatmamalı da zaten. Hangi platforma, hangi araçlar kullanarak yapılacağı gibi detaylar verildikten sonra programın ana yapısı ve nereden başlayacağınıza dair fikir istemek çok daha verimli olacaktır.&lt;/p&gt;

&lt;h3 id=&quot;bonuslar-last-but-not-least&quot;&gt;Bonuslar &lt;em&gt;(last but not least)&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Bu maddelere bonus dedim ama diyecek daha iyi bir kelime aklıma gelmediği için. Yoksa olmasa da olur maddeler değil bunlar. Olmazsa olmazlar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kibarlık&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Belirtmeme gerek olması çok üzücü ama var. Kaba biri olmanın alemi yok. Kimse kimseye yardım etmeye mecbur değil, iyilik olsun diye yapılıyor bu işler. Sorunun tartışması boyunca net, temiz cümleler kurup karşımızdakinin bize vakit ayırdığını aklımızdan çıkarmamalıyız. Sorun çözüldükten sonra bir teşekkürü çok görmemeliyiz. Yarın öbür gün aynı kişiye yine danışacağız, yüzümüz olmalı bunu yapmaya.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Topluluğa geri verme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Programlama serüveninde bence en önemli şeylerden biri topluluk. Bu topluluk sayesinde öğrenip bu topluluk sayesinde gelişiyoruz. Yazılım/teknoloji topluluğuna her anlamda borçluyuz ve bunu geri ödeyerek döngüyü devam ettirmeliyiz.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Bütün bunları yardım eden tarafta olmaktan büyük keyif alan biri olarak yazdım. Bu da benzer konularda her zaman sorulara ve yardıma açık olduğuma dair bir hatırlatmadır.&lt;/p&gt;

&lt;/blockquote&gt;</content><author><name>sibervepunk</name></author><summary type="html">Kod yazarken yardıma ihtiyacı olmayan yok, bu İngilizce, Türkçe her blogta, forumda, videoda bahsedilen bir gerçek. Yeni başlayan ya da uzman herkesin bir noktada birine ya da bir şeye danışması gerekiyor.</summary></entry><entry xml:lang="tr"><title type="html">Staj Logları 2: Proje Raporu</title><link href="http://localhost:4000/staj-log-2.html" rel="alternate" type="text/html" title="Staj Logları 2: Proje Raporu" /><published>2022-06-01T00:00:00+03:00</published><updated>2022-06-01T00:00:00+03:00</updated><id>http://localhost:4000/staj-log-2</id><content type="html" xml:base="http://localhost:4000/staj-log-2.html">&lt;p&gt;Merhaba, &lt;a href=&quot;/staj-log-1.html&quot;&gt;şurada&lt;/a&gt; staj sürecimle ilgili yazdığım ilk yazının devamı için toplandık burada. Stajı nasıl bulduğum, neler yapacağıma karar verirken geçen birtakım karışık süreçleri anlattığım bu yazıyı geride bıraktığıma göre ilk iki ayın biraz daha teknik detaylarla süslenmiş raporunu yazmanın vakti gelmiştir. İçeriğin veya başlığın yanıltıcı olabilme ihtimalinden dolayı disclaimer’i şimdiden veriyorum: Bu bir tutorial yazısı değildir. Yaptığım çalışmaların en optimal çözümler olduğunu iddia etmiyorum ve öğretici bir kaynaktan ziyade ilham verici bir kaynak oluşturmayı hedefliyorum.&lt;/p&gt;

&lt;h3 id=&quot;programa-ve-projeye-dair&quot;&gt;Programa ve projeye dair&lt;/h3&gt;

&lt;p&gt;Dahil olduğum staj programına dair birkaç detayı hatırlatarak başlamak istiyorum. 10 ay boyunca uzaktan çalışarak staj yapacağım bu programda web geliştirme üzerine çalışan bir ekibiz.&lt;/p&gt;

&lt;p&gt;Nisan ayında bizlere 2 ay sürecek olan bir görev verildi. Bu görevde şirketin kullandığı teknolojilere ve ortamlara adapte olmamız amaçlanıyordu ve görevin çıktısı kullanıcıların giriş yapabildiği, yazı yazıp, başkalarının yazdıklarına oy kullanabileceği basit bir blog sistemi olacaktı. Geçtiğimiz günlerde bu projeyi tamamladık ve sunumlarını yaptık. Süreç boyunca haftalık olarak ekip toplantıları yaparak projede yaptıklarımızı, yapamadıklarımızı tartıştık ve mentörümüzün nokta atışı yönlendirmeleriyle mümkün olduğunca en optimal çözümlere ulaşmaya çalıştık.&lt;/p&gt;

&lt;p&gt;Proje front-end ve back-end ayrı geliştirilen bir proje. Yani birbirlerine bağımlılıklarının olmaması, ayrı ayrı çalıştırılabilir ve yayınlanabilir olmaları gerekiyordu. 2 ay boyunca bu planı gerçeklemeye çalıştık.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
Şimdi kullandığımız araçlara biraz yakından bakalım:&lt;/p&gt;

&lt;h4 id=&quot;back-end&quot;&gt;Back-end&lt;/h4&gt;

&lt;p&gt;Blog sitesinin back-end kısmında Flask framework’ü ile Python kullandık. İlk denemem yazılı bir kaynak takip ederek çalışır (?) hale getirdiğim ve istekler sonucu html template döndüren versiyondu.&lt;/p&gt;

&lt;p&gt;Bu versiyonda yazdığım metotlar şu şekilde görünüyordu:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;/login&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;POST&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;login.html&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jinja template engine’ini kullanmıştım ki ilk düşüncem &lt;em&gt;“e iyiymiş bu ya hallettim bile”&lt;/em&gt; şeklinde oldu. Aldığım ilk feedback ise &lt;em&gt;“template engine kullanma, RESTful json cevaplar döndürmen gerekiyor”&lt;/em&gt; oldu. :)&lt;/p&gt;

&lt;p&gt;Buradan sonra olayların yönü değişti ve yeni hayatıma yeni kavramlar girdi. Önce REST ile başlayalım. Resmi tanımını her yerde bulabileceğimiz REST’i ben şöyle benimsedim: Bir yazılım geliştirme mimarisi. Standartları, kuralları ve kısıtları var; bunlara uyduğunuzda restful bir yazılım geliştirmiş oluyorsunuz.&lt;/p&gt;

&lt;p&gt;Bir google aramasıyla hakkında daha fazla bilgi öğrenebileceğimiz REST mimarisini Flask ile çalışırken uygulamaya yarayan Flask-restful adlı eklentiyle de bu şekilde tanışmış oldum.
Bundan sonra yazdığım metotlar şöyle görünmeye başladı:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	    &lt;span class=&quot;c1&quot;&gt;#metot içeriği
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#metot içeriği
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;msg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;success&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Artık metotlarım JSON sonuçlar ve HTTP durum kodları döndürüyordu ve bunları -henüz- nasıl kullanacağımı bilmesem de temel gereklilikleri tamamlamıştım.&lt;/p&gt;

&lt;p&gt;Burada aslında bir web server’ın çalışma mantığı ortaya çıktı benim için. İstemci kaynağa get, post gibi istekler atıyor ve server bu isteklerin karşılığı olan metotları çalıştırıp sonuçları response mesajı içinde payload olarak gönderiyor. Kullanımı biraz zahmetli olsa da ve bir sunum sırasında beni çok zor durumda bıraksa da curl bu mantığı oturtmamda epey yardımcı bir araç oldu.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Veritabanı konusunda yeni bir başlık açmayalım. Veritabanı olarak MongoDB kullandık. Açıkçası ilişkisel veritabanları en sevdiğim alanlardandır ve bunları verimli kullanabildiğime inanırım fakat ilişkisel olmayan — nosql veritabanlarıyla daha önce çalışmamıştım. Yine de ikisi arasında bağlantı kurduktan sonra (document — row ve collection — table gibi) alışmak çok zor olmadı. Bu noktada da CRUD işlemlerini yapmak ya da veritabanını sorgulamak için kullanılan bir ODM, spesifik olarak belirtmek gerekirse mongoengine kullandım.
Bütün bunla bittikten sonra proje akışına göre front-end kısmına geçtim. Başta da dediğim gibi bu front-end ve back-end birbirinden bağımısız olsa da, front-end verileri kullanıcıya sunmak için sunucudan talepte bulunacak. Bunun için back-end geliştiricinin &lt;em&gt;(ben)&lt;/em&gt; hangi endpoint’te hangi parametrelerin kullanılarak hangi sonuçların döndüğüne dair bir dokümantasyon yazarak front-end geliştiriciye &lt;em&gt;(bana)&lt;/em&gt; bir tür kaynak oluşturması gerekiyor. Bunlar herhangi bir formatta olabileceği gibi OpenAPI standartlarını kullanmamız tavsiye edildi. Bununla ilgili de metot içine yazılan docstring’lerden bu standart formatında dokümantasyon üreten ve flask-restful ile uyumlu çalışabilen Flasgger isimli bir eklenti kullandım.&lt;/p&gt;

&lt;p&gt;Bir önceki yazımda da &lt;strong&gt;&lt;em&gt;“son kullanıcı için geliştirilen değil, geliştirme sürecini kolaylaştıran yazılımlar”&lt;/em&gt;&lt;/strong&gt; derken bunu kastediyordum. Proje boyunca birçok üçüncü parti eklenti kullandım ve süreç benim için oldukça kolaylaştı. Bu tür araçlar geliştirmek için neler yapabileceğime vakit ayırmak istiyorum. Linus Torvalds’ın birinci büyük projesi olan Linux üzerinde çalışırken kendisine kolaylık sağlasın diye ikinci büyük projesi olan Git sistemini yazması bu konudaki en büyük ilham kaynağım.&lt;/p&gt;

&lt;h4 id=&quot;front-end&quot;&gt;Front-end&lt;/h4&gt;

&lt;p&gt;Sıra geldi kullanıcın etkileşime gireceği, sitenin elle tutulur gözle görülür bir hal aldığı kısma. Başka bir deyişle &lt;em&gt;raison d’être&lt;/em&gt;. Front-end geliştirirken Vue.js kullandık. Proje boyunca ilk defa kullanmadığım tek araç buydu sanırım. :) Bu yüzden component oluşturma veya Vue projesi oluşturma gibi şeyler büyük problemler olmadı.&lt;/p&gt;

&lt;p&gt;Yine de şu olay kafamda oturmuyordu: &lt;em&gt;“Front-end ile back-end’i nasıl birbirine bağlayacağız?”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Sanki bu ikisinin birbirine bağlanması için bir şeylere ihtiyaç vardı. Bir ortak nokta ya da dilin geliştiricileri tarafından sağlanan bir özellik. Halbuki cevabı daha önce bulmuştum. Cevap önümdeydi. Cevap bana &lt;em&gt;gücü kullan, Luke&lt;/em&gt; diyordu. HTTP istekleri. curl kullanarak yaptığımdan bir farkı yoktu, istek gönderen fonksiyonlar yazacaktım ve yazdığım api bunlara cevap verecekti. Yine yardımcı bir eklenti, axios devreye girdi. Başlangıçta tercih etmemim tek sebebi araştırma yaparken en çok karşıma çıkanın bu olmasıydı fakat sonradan JavaScript’in fetch adlı bir metodunun da olduğunu ve aynı amaçla kullanılabildiğini öğrendim. Yine de tutarlı bir adım atmıştım çünkü axios’un fetch’in önüne geçtiği nokta olan interceptor’ler yardımıyla HTTP isteklerini araya girip manipule ederek, üzerinde çok uzun süre uğraştığım bir hatayı çözdüm.&lt;/p&gt;

&lt;p&gt;İstekler gönderilince gelen cevapları alıp yorumlamak ve bunlara göre içerik göstermek nispeten kolay işlemlerdi. CORS policy gibi (server’ınıza hangi origin’lerden istek gönderebileceğinizi kısıtlayan) hatalar aldım fakat bunlar kısa araştırmalar sonucu çözdüğüm şeylerdi.&lt;/p&gt;

&lt;p&gt;Üye olmak söz konusu olduğu için bir auth sistemi gerekiyordu, bunun için JWT kullandım. Yine güzel bir üçüncü parti eklenti, flask-jwt-extended bu konuda çok işimi gördü. JWT ile çalışırken HTTP mesajları, bu mesajların header’ları konusunda çok detaylı araştırmalar yaptım ve çalışma mantıklarını çözdüm.&lt;/p&gt;

&lt;p&gt;Son olarak ufak bir stil çalışmasıyla projemi renklendirdim ve hata ayıklamalarla, refactorlerle geçen son haftanın ardından sunum gününü getirdim.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Özet geçince birkaç paragrafta bitmiş olan bu süreç tam iki ay sürdü. Hatalar alındı ve problemler çözüldü. Görevler tamamlandı. Projeye başladığımda elimde hiçbir şey yoktu. Bilgisayarımı iki ekrana bölmüştüm. Bir tarafta boş bir VS Code sayfası, diğer tarafta nispeten yabancı olan kelimelerle dolu bir proje dokümantasyonu. İki ayın sonunda bir tarafta dolu VS Code sayfaları diğer tarafta projemin çalışır hali vardı. Evet ortaya bir ürün çıkardım ve programlama tarafına dair yüzlerce şey öğrendim fakat bir ekibe dahil olarak proje geliştirme sürecine dair öğrendiklerim de beni çok tatmin etti. Sonuçta bireysel olarak kendime göre büyük / küçük çeşitli projeler geliştirmiştim fakat süreç hiçbirinde bu şekilde değildi. Hem teknik hem de sosyal birtakım beceriler devreye girdi bu noktada. Biraz bunları inceleyelim.&lt;/p&gt;

&lt;h4 id=&quot;misc&quot;&gt;Misc&lt;/h4&gt;

&lt;p&gt;Öncelikle iletişim çok önemli. Detaylı, saygılı ve yoğun iletişim daha önemli. Burada ne denmek istediğini tanıdık olabilecek bir senaryoyla açıklayayım. Ben çok düzenli olmasa da bir forum kullanıcısıyım. Forum kültürünü seviyorum hala, 2007 yılındaymışım gibi. Forumlarda sorunlara çözüm bulmak ise hobilerimden. &lt;em&gt;(Çok fazla hobim olduğu söylenemez)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Stack Overflow buna karşı önlemler alsa da Türk teknoloji forumlarında ya da reddit’te de denk gelmiş olabileceğiniz üzere “Visual Studio yazdığım kod çalışmıyor” minvalinde konular açılır. “Sağlık olsun, inşallah başka kodların çalışır.” demekten başka çare yoktur bu sorulara. Çünkü hangi kod, hangi programlama dili, hangi hata, çalışmamak ne demek, tepki mi vermiyor, istediğin gibi mi çalışmıyor? Zihin okuyucu olmayan kimse bunları bilemez. Zihin okuyucular bile online çalışabilir mi emin değilim. Bunları bilmeden de yardımcı olunamaz. Sonra bunlar tek tek sorulur, mesajlar saatler sonra cevaplanır ve bu böyle gider. Bir noktalı virgül unutma vakası ertesi gün anca çözülmüş olur.&lt;/p&gt;

&lt;p&gt;Yani uzun lafın kısası soru sorarken mümkün olduğunca fazla detay vermek gerekiyor. Forum örneği genellemesini ekibimize uyarlayacak olursak; bir problemi anlatırken, ne yaptığını raporlarken, genel olarak konuşurken de detay vermek gerekiyor. &lt;em&gt;“Daha önce bahsetmiştim”&lt;/em&gt; işe yarar bir argüman değil maalesef. Daha önce bahsedilen şeyler unutuluyor, gözden kaçırılıyor ya da yanlış anlaşılıyor. Bunlara dikkat etmek gerekiyor. Açıkçası beni iletişimden geri tutan şey genelde insanları rahatsız etmeyeyim, kim okuyacak bu kadar yazıyı, kendim uğraşayım biraz daha düşüncesiydi fakat bunu mentörüm çok güzel bir şekilde çözümledi: &lt;em&gt;“Kendi başına altı saat kaybedeceğin bir problemi beraber çözersek senin iki saatin gider, benim iki saatim gider ama ekibe iki saat kazandırmış oluruz.”&lt;/em&gt; Beklenen çıktı budur. Güçlü iletişim ve ekip çalışması önemli ve öncelikli.&lt;/p&gt;

&lt;p&gt;İletişimin alt başlığı olarak yaptıklarını anlatabilmenin de önemli olduğunu söyleyebilirim. Biz her hafta hem toplantı yaptık hem de rapor yazarak neler üzerine çalıştığımızı anlattık. Sunumun da kod kadar önemli olduğuna, “burayı neden, nasıl, ne düşünerek böyle yaptın?” sorusunu mutlaka alacağınıza ve kendi kodunuzu çok iyi biliyor olsanız da kelimelere dökemediğinizde kötü hissedebileceğinize garanti verebilirim.&lt;/p&gt;

&lt;p&gt;Versiyon kontrolü yapmanın önemini şuraya kadar yazdığım programlama kavramlarına aşina olan herkes biliyordur. Birinci sınıftayken yaptığım bir konsol projesinin klasörünü aleme ibret olsun diye tutuyorum. Klasörün içinde “calisan_hali.c”, “son_hali.c” , “hatasiz_kod.c”, “25mart_yedek.c” gibi 10–15 tane C dosyası var. :D Ne demek istediğimi anlatabiliyorumdur diye düşünüyorum. Versiyon kontrolü bireysel projelerde olduğu gibi, ekip projelerinde de kullanılması kaçınılmaz bir araç. İkinci sınıfta Git kullanmayı bilmeyen bir arkadaşımla ödev hazırılıyordum uzaktan çalışarak. Birkaç ay boyunca birbirimize klasör atıp kod kopyaladık arkadaşlar. Gerçekten utanıyorum bunu yazmaya. İkna edemedim kendisini birkaç saatte git öğrenmeye. Conflict olunca zaman kaybı oluyormuş öyle demişti. Git önemli. Önemli olmasaydı Linus Torvalds da “Linux_calisan_hali.c” diye yayınlardı işletim sistemini.&lt;/p&gt;

&lt;p&gt;Git’in de kendince standartları ve kullanım türleri var. Biz projede özellikle conventional commits standart’ına uyduk. &lt;strong&gt;&lt;em&gt;“this should fix it”&lt;/em&gt;&lt;/strong&gt; gibi commitler sevimli görünüyor ama buraya nereden geldim, en son ne yapmıştım, takım arkadaşım en son ne yapmış sorularına cevap bulabilmek için özellikle ekiplerin bir standarta uyması gerekiyor. Ayrıca conventional commits ile semantic versioning denilen versiyonlama sistemi de otomatize edilebiliyor.&lt;/p&gt;

&lt;p&gt;Proje sürecinde bir yol haritasının olması, software development cycle konseptiyle ilerlenmesi ve plana sadık kalabilmek aslında önemli şeyler. Tabii yazılım mühendisliği dersinde öğrendik bunları, agile development dedik, planlama, analiz, geliştirme, sunum ve bakım dedik fakat teorik bilgiyi, hele ki sabit olmayan ve subjektif olabilen bilgiyi pratiğe dökmek birkaç deneme alıyor. Planlama için bireysel olarak bir tür canban board kullandım ve verim aldığımı da söyleyebilirim. Her hafta başında neleri yapacağımı planlamak ve yapmak projeyi zamanında bitirmeme yardımcı oldu. Fakat başlangıçtan itibaren sona doğru nasıl ilerleyeceğimi belirleseydim en azından okul tarafında çok yoğun olduğum haftalar daha stressiz geçerdi.&lt;/p&gt;

&lt;p&gt;Biraz kervan yolda düzülür mantığıyla ilerlememin bir sebebi belki de şuydu, tam olarak ne yapacağımı, başıma nelerin geleceğini bilmiyordum. Evet son üç hafta kala bir roadmap oluşturdum ve işleri düzene soktum fakat başlangıçta ne yapacağıma ve hangi işin ne kadar süreceğine dair bir fikir yürütmem biraz zorlayıcı olacaktı. Yine de planlama aşaması ilerdeki çalışmalarımda dikkat edeceğim bir konu olacak.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Sanırım bu kadar özet yeterli. Süreç boyunca aldığım notlara ve yapılacaklar listeme bakarak hatırladığım şeylerden bahsettim. Başlangıçta da dediğim gibi bir ‘nasıl yapılır’ kaynağı olmayı hedeflemediğim için isimler haricinde çok detaya girmedim. 10 ay sürecek stajımın ilk iki ayı benim için verimli ve başarılı geçti. İlk tecrübemde anlayışlı ve alanında çok başarılı insanlarla çalışma imkanı bulduğum için çok şanslı hissediyorum. Takım arkadaşlarımla da ortak çalışmalar yapmaya başlamak ve bunları da sizlere anlatmak için sabırsızlanıyorum.&lt;/p&gt;</content><author><name>sibervepunk</name></author><summary type="html">Merhaba, şurada staj sürecimle ilgili yazdığım ilk yazının devamı için toplandık burada. Stajı nasıl bulduğum, neler yapacağıma karar verirken geçen birtakım karışık süreçleri anlattığım bu yazıyı geride bıraktığıma göre ilk iki ayın biraz daha teknik detaylarla süslenmiş raporunu yazmanın vakti gelmiştir. İçeriğin veya başlığın yanıltıcı olabilme ihtimalinden dolayı disclaimer’i şimdiden veriyorum: Bu bir tutorial yazısı değildir. Yaptığım çalışmaların en optimal çözümler olduğunu iddia etmiyorum ve öğretici bir kaynaktan ziyade ilham verici bir kaynak oluşturmayı hedefliyorum.</summary></entry><entry xml:lang="tr"><title type="html">Staj Logları 1: Her şey büyük bir patlama ile başladı</title><link href="http://localhost:4000/staj-log-1.html" rel="alternate" type="text/html" title="Staj Logları 1: Her şey büyük bir patlama ile başladı" /><published>2022-04-19T00:00:00+03:00</published><updated>2022-04-19T00:00:00+03:00</updated><id>http://localhost:4000/staj-log-1</id><content type="html" xml:base="http://localhost:4000/staj-log-1.html">&lt;p&gt;Selam, belki de başlığı görerek geldiğiniz bu yazı staj yolculuğumla ilgili beklentinizi karşılayacağını umduğum uzun bir serinin başlangıç yazısı olacak. Yazımın hedef kitlesi sanırım en az 1. sınıf bilgisayar mühendisliği öğrencileri veya yazılım ilgilileri olacak çünkü çok ufak da olsa teknik detaylara gireceğim. Tabii meraklısı olan veya bölümü merak eden herkesin başımın üstünde yeri vardır. Bu noktada öncelikle kendimden bahsetmeli ve bu yolculuğun arkaplanında nelerin olduğunu göstermeliyim. Burayı merak etmeyip staj bulma kısmına atlamak isteyenler beklenmedik bir yolculuk başlığına doğru devam edebilir.&lt;/p&gt;

&lt;h3 id=&quot;hakkımda-kisa-bir-özet&quot;&gt;Hakkımda KISA bir özet&lt;/h3&gt;

&lt;p&gt;Bilgisayar mühendisliği 3. sınıf öğrencisiyim. Bölüme başladığım günden itibaren en sık gördüğüm, duyduğum tavsiye ‘öğrendiklerinizi yazın’ oldu. Ayrıca yıllardır bildiklerimi ve tecrübelerimi anlatmayı seven biri olarak tanıdım kendimi. Çeşitli platformlarda birden çok kez yaptığım ve çeşitli sebeplerle sürdürmediğim bu girişimi artık kalıcı ve düzenli hale getirme niyetiyle tekrar başlatıyorum. Kendimle ilgili henüz çok detay vermeyi düşünmüyorum, isimler ve benzeri bilgileri şimdilik çok geçirmeyebilirim. Genel olarak bilgisayar bilimlerini çok seven ve konseptleri anlayıp uygulamaya meraklı biriyim. Uygulama kısmında ağırlıklı olarak web teknolojileri üzerinde çalışmaktayım. Bunu şimdi böyle yazmak çok kolay gelse de bu kararı en başından verdiğimi söyleyemem. “Şu kadar sene oldu, hala hangi yolda ilerleyeceğime karar veremedim” diyen öğrenci arkadaşlarımı çok iyi anladığım gibi, “artık yolunu belirle, hayata geç kalıyorsun” diyenleri pek anlayamıyorum. Yıllarca çalıştıktan sonra kariyer değişikliği yapmak bile çok olağanken branş değişikliğini gayet normal buluyorum. Tabi ki tecrübeli insanlar bu değişikliklerin getirebileceği olumsuzlukları bilerek böyle bir tavsiyede bulunmakta haklılar fakat bu konunun çok aceleye getirilip sevilmeyen işlere maruz kalınmasının getireceği olumsuzlukları da görmezden gelmemeliyiz. Okulda sevdiğiniz dersler nelerden hoşlandığınıza bir delil olabileceği gibi, olmayabilir de. Web teknolojileriyle ilgilenen biri olarak okulda web geliştirme dersinden hiç hoşlanmamıştım mesela.&lt;/p&gt;

&lt;p&gt;2. sınıfa kadar sürekli olarak öğrenerek ilerledim. Algoritmaları, veri yapılarını ve benzeri “core” kavramları öğrendim. C# ile kod yazmaktan çok hoşlandım ve nesne yönelimli programlama (OOP) benim için bir neşe kaynağıydı. Fakat tüm bunlar teorik bilgilerde ve Github’a bile yüklemeyi düşünmediğim ufak projelerde kalıyordu. Bilgilerin uygulamalarla desteklenmedikçe bir işe yaramayacağının farkındaydım. 1. sınıfta Unity ile oyun geliştirmeye çalıştım fakat o kadar sevmedim ki artık bilgisayarı açmak bile içimden gelmiyordu. Neyi istediğimi bilmesem de artık neyi istemediğimi fark etmiştim.&lt;/p&gt;

&lt;p&gt;2.sınıfın yaz tatilinde en azından bir alana az da olsa odaklanmam gerektiğini düşünüp web’e başladım. Bu mobil programlama da olabilirdi, yapay zeka da. Bu süreçlerin son derece sancılı geçtiğini de belirtmeliyim. Fakat (başlangıç için) kolay ve direkt sonuçları görebileceğiniz bir alan olduğu için web ile ilgilenmeyi seçtim. Birkaç front-end tasarımı yaptıktan sonra back-end’e geçmeyi planlıyordum.&lt;/p&gt;

&lt;p&gt;Bu dönemde Linux ortamı ve açık kaynak kavramıyla tanıştım. Ayrıca son kullanıcı için yapılan uygulamalar yerine geliştiriciler için yapılan çeşitli teknolojileri tanıdım. Buradaysa isteklerim arasında çatışma meydana geldi. UX ve UI tasarlamaktan kısıtlı bilgimle de olsa zevk alıyordum fakat bir yandan bunlarla daha az uğraşıp, kod yazmakta ustalaşmak istiyordum. Aldığım bir tasarım kursunda bu konuda alabileceğim en iyi dersi aldım: “Tasarımda kötü olmak daha iyi kod yazdığınız anlamına gelmez, sadece tasarımda kötü olduğunuz anlamına gelir.”&lt;/p&gt;

&lt;p&gt;Bu çatışmaları da bir kenara bıraktıktan sonra, neleri sevdiğim ve neleri sevmediğim uzayıp giden bir liste olur. Bunun da bu yazının bağlamından biraz uzaklaştıracağını fark ettim. Yine de buraya kadar olan kısım, benim sancılarımı çeken arkadaşlarıma yalnız olmadıklarını gösterir diye umut ediyorum.&lt;/p&gt;

&lt;h3 id=&quot;beklenmedik-yolculuk&quot;&gt;Beklenmedik Yolculuk&lt;/h3&gt;

&lt;p&gt;Yolculuğumun başlangıcı bu yılın, 3. sınıfın başlangıcına dayanıyor. Okulda kısmi zamanlı çalışmak için ilan açıldığını gördüm ve ilk dönem bazı derslerin de uzaktan olması sebebiyle boş zamanlarımı çalışarak geçirebilirim diye düşündüm. Bilgi İşlem birimine gidip burada çalışacak olan öğrencilerden beklentileri neler diye sordum. Genellikle format atmak, okul bilgisayarlarını çalışır hale getirmek gibi cevaplar aldım ama yapacak daha iyi bir işim yoktu ben de başvurdum. Oraya kabul edildikten sonraysa umduğumdan çok daha güzel bir iş verildi bana: Üniversitenin otomasyon sistemine bir uygulama entegre edecektim. Bir tür istek/öneri uygulaması. Resmi kurumlarda bu işlerin nasıl döndüğünü bilirsiniz. İstekler birimler arası yönlendirilir veya cevaplandırılır. Aynı sistem üzerinde tüm bunların takibinin yapılması gerekir. Kısacası web geliştirme yapacaktım üstelik var olan bir sisteme. İlk iki hafta ortama adapte olmam yani ASP.NET Core , MVC tasarım deseni gibi teknolojileri öğrenmem ve var olan kodları bol bol okumam gerekti. Ardından programlamaya başladım ve şu an hala orada çalışmaya devam etsem de projeyi büyük ölçekte hallettiğimi gururla söyleyebilirim. Bu noktada ilk kez var olan bir projeye kod yazma ve bir supervisor (yönetici) ve başkanla çalışma deneyimi kazanmış oldum. Projenin ilk kısımları ortaya çıkmaya başladığında daire başkanının odasında büyük ekranda filmlerdeki gibi bir sunum yapmıştım ve yaşadığım en heyecan verici deneyimlerden biriydi.&lt;/p&gt;

&lt;p&gt;2022’nin başlarında 3. sınıfın yaz tatilini geçirmek üzere staj arayışına başladım. Hala web üzerinde mi gideceğim yoksa başka alanları da deneyip tecrübe edinmeli miyim kararsızdım. Bir yandan okulda gördüğüm dersleri mümkün olduğunca absorbe edip alabileceğim en büyük faydayı almaya çalışıyordum çünkü bu alanlara tekrar dönmeye vaktim olmayabilirdi. Kısacası her şeyi istiyordum ama olmayacağının farkındaydım. Bir iki staja başvurduktan sonra bir arkadaşım bir ilan attı. Bir şirkette web geliştirme alanında uzun dönem stajyer aranıyordu ve uzaktan çalışacaktık. Şartlar son derece ikna ediciydi ve mükemmel bir tecrübe olacağını düşünerek özgeçmişimi gönderdim.&lt;/p&gt;

&lt;p&gt;Staj arayışından öğrenme sürecine, eğitimin tüm aşamalarında arkadaş desteğinin önemini belirtmek istiyorum. Ben arkadaşlarıma ders notlarımı atarım, onlar bana atar, böyle ilanları, etkinlikleri, faydalı olabilecek her şeyi birbirimizle paylaşırız. Birbirimize yeni bakış açıları, deneyimler ve fikirler kazandırıyoruz ve üniversitede kazanılan en önemli kazanımlardan birinin bu olabileceğine inanıyorum. İyi insanları rakibimiz olarak görmemeliyiz.&lt;/p&gt;

&lt;p&gt;Stajdan umutluydum çünkü tecrübem vardı ve başvuru formunda kendimi çok güzel ifade etmiştim. Mülakat günü çok heyecanlıydım. Bir proje koordinatörü ve teknik ekipten biriyle online mülakata girdim. Bana neler yaptığım, günlerimin nasıl geçtiği soruldu. Çoğunlukla Microsoft teknolojileriyle çalıştığımı, onlarınsa şirkette farklı teknolojiler kullandıklarını buna uyum sağlayıp sağlayamayacağımı sordular.&lt;/p&gt;

&lt;p&gt;Mülakattan sonra bir süre kendime gelemedim diyebilirim. Kötü geçtiğini, kendimi ifade edemediğimi düşünüyordum. Microsoft ortamlarından (mecbur kalmadıkça) kaçtığımı söyleyememiştim. Fakat çalışkan olduğumu, öğrenmeye hevesli olduğumu özgüvenle söylemiştim fakat bunların yeterli olacağından emin değildim. Bunları anlatıyorum çünkü 1 hafta sonra olumlu haber aldım. :) Süreç boyunca yolunda gitmeyen şeyler her zaman kötü sonuçların habercisi olmayabiliyor yani.&lt;/p&gt;

&lt;p&gt;Staja kabul edilmiştim ve görünen oydu ki sandığım kadar kötü geçmemişti. İlk mülakatımdan olumlu dönüş almak beni tabi ki gururlandırdı ve özgüvenimi yeniledi. Bütün bunlar bu Nisan ayının başında oldu.&lt;/p&gt;

&lt;h3 id=&quot;stajda-ilk-iki-hafta&quot;&gt;Stajda ilk iki hafta&lt;/h3&gt;

&lt;p&gt;Staja kabul edilme sürecinden sonra ilk iki haftada neler olduğundan bahsedeyim. Bundan sonra da haftalık olarak yazmaya devam edeceğim.&lt;/p&gt;

&lt;p&gt;İlk olarak kabul edilen stajyerlerin ve takım liderlerinin olduğu bir online toplantı düzenlendi. Bundan sonra toplantıların online olduğunu tekrar belirtmeyeceğim, bütün toplantıları, görüşmeleri vs. online ortak parantezine alabiliriz çünkü bu stajın tamamı uzaktan gerçekleşecek. Bu toplantıda farklı alanlarda çalışacak olan 3 takım olduğunu öğrendim. Biz web geliştirme ekibi olarak mentorümüzle birlikte 6 kişilik bir takımız.&lt;/p&gt;

&lt;p&gt;Bu takımla da ayrıca bir toplantı yaptık. İlk iki aylık süreçte, ortama ve kullanılan teknolojilere alışmamız için bir proje geliştirmemiz gerekiyor. Bu projenin de ayrıntılarını sonradan yazmayı planlıyorum fakat kısaca bahsetmek gerekirse Python / Flask kullanarak bir blog sistemi geliştireceğimiz bu projede MongoDB veritabanını kullanacağız ve Vue.js framework’ü ile front-end geliştireceğiz.&lt;/p&gt;

&lt;p&gt;Projede benim için yeni olan şeyleri yazayım: &lt;strong&gt;her şey&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;İlişkisel veritabanlarıyla aram gayet iyi olsa da hiç nosql bir veritabanı kullanmamıştım. Genel olarak programlama bilgisi olan biri için yeni bir programlama diline (başlangıçta) adapte olmak zor olmuyor , birkaç fazladan noktalı virgülden sonra Python’a temel düzeyde alıştım fakat Flask ile de geliştirme yapmamıştım. Vue.js ile bir proje geliştirmiş olsam da bu kadar yabancı şeyin içinde bana pek tesellisi olmadı denilebilir..&lt;/p&gt;

&lt;p&gt;Bunlar bir yana, yeni olan birkaç şeyden daha bahsedebilirim:&lt;/p&gt;

&lt;p&gt;Hepimiz git kullanıyoruz, &lt;em&gt;(kullanıyor olmalıyız)&lt;/em&gt; fakat commit mesajlarını nasıl yazıyoruz? Conventional commits bu mesajlara bir standart getiren bir tanımlama böylece ekipteki herkes aynı noktada olabiliyor. Code review’lar daha kolay oluyor ve proje daha düzenli ilerliyor. Ayrıca semantic versioning denilen versiyonlamaya da yardımcı oluyor. Örneğin bir uygulamanın 4.7.3. sürümü aslında bu commitlerdeki fix, feature ve breaking change başlıklarıyla alakalı.&lt;/p&gt;

&lt;p&gt;Ayrıca verilen görevde dokümantasyon yazmanın önemi ve RESTful API geliştirme gibi detaylardan da bahsediliyor fakat bu detayları bir sonraki teknik yazıya saklıyorum.&lt;/p&gt;

&lt;p&gt;Staj sürecinde sevdiğim şeylerden biri de her hafta yaptıklarımızla alakala rapor yazıyor olmamız ve düzenli olarak hem teknik takım toplantıları hem de bireysel toplantılar yapıyor olmamız. Bir ekip içinde profesyonel bir iş yaptığımın bilincinde olmak motivasyonumu arttırıyor diyebilirim.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Bu yazı başta planladığımdan farklı bir yönde evrildi fakat bundan sonraki süreci daha iyi anlatabilmem için bu arkaplanı verdiğime memnunum.
Teknik detaylara girdiğim devam yazısı: &lt;a href=&quot;/staj-log-2.html&quot;&gt; Staj Logları 2: Proje Raporu&lt;a&gt;&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>sibervepunk</name></author><summary type="html">Selam, belki de başlığı görerek geldiğiniz bu yazı staj yolculuğumla ilgili beklentinizi karşılayacağını umduğum uzun bir serinin başlangıç yazısı olacak. Yazımın hedef kitlesi sanırım en az 1. sınıf bilgisayar mühendisliği öğrencileri veya yazılım ilgilileri olacak çünkü çok ufak da olsa teknik detaylara gireceğim. Tabii meraklısı olan veya bölümü merak eden herkesin başımın üstünde yeri vardır. Bu noktada öncelikle kendimden bahsetmeli ve bu yolculuğun arkaplanında nelerin olduğunu göstermeliyim. Burayı merak etmeyip staj bulma kısmına atlamak isteyenler beklenmedik bir yolculuk başlığına doğru devam edebilir.</summary></entry></feed>